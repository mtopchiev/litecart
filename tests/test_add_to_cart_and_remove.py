from fixture.application import Application
import pytest


# Сделайте сценарий для добавления товаров в корзину и удаления товаров из корзины.
# 1) открыть главную страницу
# 2) открыть первый товар из списка
# 2) добавить его в корзину (при этом может случайно добавиться товар, который там уже есть)
# 3) подождать, пока счётчик товаров в корзине обновится
# 4) вернуться на главную страницу, повторить предыдущие шаги ещё два раза, чтобы в общей сложности в корзине было 3 единицы товара
# 5) открыть корзину (в правом верхнем углу кликнуть по ссылке Checkout)
# 6) удалить все товары из корзины один за другим, после каждого удаления подождать, пока внизу обновится таблица
#-----------
# Передалайте сценарий, чтобы он использовал многослойную архитектуру.
# А именно, выделите вспомогательные классы:
# 1)	для работы с главной страницей (откуда выбирается товар),
# 2)	для работы со страницей товара (откуда происходит добавление товара в корзину),
# 3)	со страницей корзины (откуда происходит удаление),
# 	и реализуйте сценарий, который не напрямую обращается к операциям Selenium, а оперирует вышеперечисленными объектами-страницами.


@pytest.fixture
def app(request):   # создаем фикстуру
    fixture = Application()
    request.addfinalizer(fixture.destroy)
    return fixture


def test_add_to_cart_and_remove(app):
    # главная страница
    app.eshop_home()

    # страница товара
    for i in range(0, 3):
        app.open_first_item_page() # открыли первый товар в рандомном списке
        app.add1_item_to_cart() # добавили 1 товар в корзину + проверили что счетчик корзины увеличился на 1
    app.eshop_home() #вернулись на главную страницу
    app.eshop_checkout()  # перешли в корзину

    # страница корзины
    app.remove_all_items_from_cart() #удаляем товары из корзины по очереди, и проверяем что корзина пуста





